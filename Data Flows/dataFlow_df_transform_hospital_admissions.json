{
  "Name": "df_transform_hospital_admissions",
  "RGName": "covid-reporting-rg",
  "DFName": "covid-reporting-an-datafactory",
  "Properties": {
    "Sources": [
      {
        "SchemaLinkedService": null,
        "Name": "HospitalAdmissionSource",
        "Description": null,
        "Dataset": {
          "ReferenceName": "ds_raw_hospital_admission",
          "Parameters": null
        },
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "SchemaLinkedService": null,
        "Name": "CountrySource",
        "Description": null,
        "Dataset": {
          "ReferenceName": "ds_country_lookup",
          "Parameters": null
        },
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "SchemaLinkedService": null,
        "Name": "DimDateSource",
        "Description": null,
        "Dataset": {
          "ReferenceName": "ds_dim_date_lookup",
          "Parameters": null
        },
        "LinkedService": null,
        "Flowlet": null
      }
    ],
    "Sinks": [
      {
        "SchemaLinkedService": null,
        "RejectedDataLinkedService": null,
        "Name": "WeeklySink",
        "Description": null,
        "Dataset": {
          "ReferenceName": "ds_processed_hospital_admission_weekly",
          "Parameters": null
        },
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "SchemaLinkedService": null,
        "RejectedDataLinkedService": null,
        "Name": "DailySink",
        "Description": null,
        "Dataset": {
          "ReferenceName": "ds_processed_hospital_admission_daily",
          "Parameters": null
        },
        "LinkedService": null,
        "Flowlet": null
      }
    ],
    "Transformations": [
      {
        "Name": "SelectReqFields",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "LookupCountry",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "SelectReqFields2",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "SplitDailyFromWeekly",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "AggDimDate",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "JoinWIthDate",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "PivotWeekly",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "PivotDaily",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "SortWeekly",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "SortDaily",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "SelectWeekly",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      },
      {
        "Name": "SelectDaily",
        "Description": null,
        "Dataset": null,
        "LinkedService": null,
        "Flowlet": null
      }
    ],
    "Script": null,
    "ScriptLines": [
      "source(output(",
      "          country as string,",
      "          indicator as string,",
      "          date as date,",
      "          year_week as string,",
      "          value as double,",
      "          source as string,",
      "          url as string",
      "     ),",
      "     allowSchemaDrift: true,",
      "     validateSchema: false,",
      "     ignoreNoFilesFound: false) ~> HospitalAdmissionSource",
      "source(output(",
      "          country as string,",
      "          country_code_2_digit as string,",
      "          country_code_3_digit as string,",
      "          continent as string,",
      "          population as string",
      "     ),",
      "     allowSchemaDrift: true,",
      "     validateSchema: false,",
      "     ignoreNoFilesFound: false) ~> CountrySource",
      "source(output(",
      "          date_key as string,",
      "          date as string,",
      "          year as string,",
      "          month as string,",
      "          day as string,",
      "          day_name as string,",
      "          day_of_year as string,",
      "          week_of_month as string,",
      "          week_of_year as string,",
      "          month_name as string,",
      "          year_month as string,",
      "          year_week as string",
      "     ),",
      "     allowSchemaDrift: true,",
      "     validateSchema: false,",
      "     ignoreNoFilesFound: false) ~> DimDateSource",
      "HospitalAdmissionSource select(mapColumn(",
      "          country,",
      "          indicator,",
      "          reported_date = date,",
      "          reported_year_week = year_week,",
      "          value,",
      "          source",
      "     ),",
      "     skipDuplicateMapInputs: true,",
      "     skipDuplicateMapOutputs: true) ~> SelectReqFields",
      "SelectReqFields, CountrySource lookup(SelectReqFields@country == CountrySource@country,",
      "     multiple: false,",
      "     pickup: 'any',",
      "     broadcast: 'auto')~> LookupCountry",
      "LookupCountry select(mapColumn(",
      "          country = SelectReqFields@country,",
      "          indicator,",
      "          reported_date,",
      "          reported_year_week,",
      "          value,",
      "          source,",
      "          country = CountrySource@country,",
      "          country_code_2_digit,",
      "          country_code_3_digit,",
      "          population",
      "     ),",
      "     skipDuplicateMapInputs: true,",
      "     skipDuplicateMapOutputs: true) ~> SelectReqFields2",
      "SelectReqFields2 split(indicator == 'Weekly new hospital admissions per 100k' || indicator == 'Weekly new ICU admissions per 100k',",
      "     disjoint: false) ~> SplitDailyFromWeekly@(Weekly, Daily)",
      "DimDateSource aggregate(groupBy(ecdc_year_week = year+'-W'+lpad(week_of_year,2,'0')),",
      "     week_start = min(date),",
      "          week_end = max(date)) ~> AggDimDate",
      "SplitDailyFromWeekly@Weekly, AggDimDate join(reported_year_week == ecdc_year_week,",
      "     joinType:'inner',",
      "     matchType:'exact',",
      "     ignoreSpaces: false,",
      "     broadcast: 'auto')~> JoinWIthDate",
      "JoinWIthDate pivot(groupBy(country,",
      "          country_code_2_digit,",
      "          country_code_3_digit,",
      "          population,",
      "          reported_year_week,",
      "          week_start,",
      "          week_end,",
      "          source),",
      "     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
      "     count = sum(value),",
      "     columnNaming: '$V_$N',",
      "     lateral: true) ~> PivotWeekly",
      "SplitDailyFromWeekly@Daily pivot(groupBy(country,",
      "          country_code_2_digit,",
      "          country_code_3_digit,",
      "          population,",
      "          reported_date,",
      "          source),",
      "     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),",
      "     count = sum(value),",
      "     columnNaming: '$V_$N',",
      "     lateral: true) ~> PivotDaily",
      "PivotWeekly sort(desc(reported_year_week, true),",
      "     asc(country, true),",
      "     partitionBy('hash', 1)) ~> SortWeekly",
      "PivotDaily sort(desc(reported_date, true),",
      "     asc(country, true),",
      "     partitionBy('hash', 1)) ~> SortDaily",
      "SortWeekly select(mapColumn(",
      "          country,",
      "          country_code_2_digit,",
      "          country_code_3_digit,",
      "          population,",
      "          reported_year_week,",
      "          reported_week_start_date = week_start,",
      "          reported_week_end_date = week_end,",
      "          new_hospital_occupancy_count = {Weekly new hospital admissions per 100k_count},",
      "          new_icu_occupancy_count = {Weekly new ICU admissions per 100k_count},",
      "          source",
      "     ),",
      "     skipDuplicateMapInputs: true,",
      "     skipDuplicateMapOutputs: true) ~> SelectWeekly",
      "SortDaily select(mapColumn(",
      "          country,",
      "          country_code_2_digit,",
      "          country_code_3_digit,",
      "          population,",
      "          reported_date,",
      "          hospital_occupancy_count = {Daily hospital occupancy_count},",
      "          icu_occupancy_count = {Daily ICU occupancy_count},",
      "          source",
      "     ),",
      "     skipDuplicateMapInputs: true,",
      "     skipDuplicateMapOutputs: true) ~> SelectDaily",
      "SelectWeekly sink(allowSchemaDrift: true,",
      "     validateSchema: false,",
      "     partitionFileNames:['hospital_admissions_weekly.csv'],",
      "     truncate: true,",
      "     umask: 0022,",
      "     preCommands: [],",
      "     postCommands: [],",
      "     skipDuplicateMapInputs: true,",
      "     skipDuplicateMapOutputs: true,",
      "     partitionBy('hash', 1)) ~> WeeklySink",
      "SelectDaily sink(allowSchemaDrift: true,",
      "     validateSchema: false,",
      "     partitionFileNames:['hospital_admissions_daily.csv'],",
      "     truncate: true,",
      "     umask: 0022,",
      "     preCommands: [],",
      "     postCommands: [],",
      "     skipDuplicateMapInputs: true,",
      "     skipDuplicateMapOutputs: true,",
      "     partitionBy('hash', 1)) ~> DailySink"
    ],
    "Description": null,
    "Annotations": null,
    "Folder": null
  },
  "Id": "/subscriptions/f84a2822-7f27-4f44-982c-ca7ca3705fdd/resourceGroups/covid-reporting-rg/providers/Microsoft.DataFactory/factories/covid-reporting-an-datafactory/dataflows/df_transform_hospital_admissions",
  "ETag": "88014e92-0000-1100-0000-661c39640000",
  "ResourceGroupName": "covid-reporting-rg",
  "DataFactoryName": "covid-reporting-an-datafactory"
}
